name: CI/CD

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: db_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_PORT: 5432
          DJANGO_ENVIRONMENT: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DJANGO_ENVIRONMENT: test
      DB_NAME: db_test
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_HOST: postgres
      DB_PORT: 5432

    steps:
      - name: Checkout project code
        uses: actions/checkout@v3

      - name: Setup Python 3.12.2
        uses: actions/setup-python@v4
        with:
          python-version: 3.12.2

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements/*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r requirements/base.txt
          python -m pip install -r requirements/test.txt

      - name: Apply DB migrations
        run: |
          python manage.py migrate
        env:
          DB_HOST: 127.0.0.1

      - name: Run tests
        run: |
          pytest -v
        env:
          DB_HOST: 127.0.0.1

  deploy:
    name: Deploy to Render
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push' && needs.test.result == 'success'
    steps:
      - name: Checkout project code
        uses: actions/checkout@v3
      - name: Trigger Render Deploy Hook
        run: |
          curl -X POST \
            -H "Content-Type: application/json" \
            -d '{}' \
            "${{ secrets.RENDER_DEPLOY_HOOK }}"
